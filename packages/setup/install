#!/bin/sh

. config/options

mkdir -p $INSTALL/sbin
cp $PACKAGES/$1/scripts/setup.sh $INSTALL/sbin/setup
sed $PACKAGES/$1/scripts/installator.sh \
  -e "s/VERSION=dummy/VERSION=${DISTRO_VERSION}/" \
  -e "s/DISTRO=dummy/DISTRO=${DISTRONAME}/" \
  -e "s/ARCH=dummy/ARCH=${TARGET_ARCH}/" > \
  $INSTALL/sbin/installator
chmod 755 $INSTALL/sbin/*

if [ "$TARGET_ARCH" = arm ]; then
  if [ "$TARGET_PLATFORM" = a20 -o "$TARGET_PLATFORM" = amlogic-m6 ]; then
    INSTALL_SCRIPTS="diseqcsetup select-irdrv update-channels update-transponders netconfig select-language videocache getcam select-target select-backend update-epg get-vdrchannels"
  else
    INSTALL_SCRIPTS="diseqcsetup select-irdrv update-channels update-transponders netconfig select-language audio-config videocache getcam select-backend update-epg get-vdrchannels"
  fi
else
  INSTALL_SCRIPTS="diseqcsetup monitor.sh update-channels update-dvbdevice update-transponders install-drivers netconfig select-irdrv select-language select-plugins audio-config videocache getcam select-target select-backend update-epg screenshot get-vdrchannels"
fi

[ "$TARGET_PLATFORM" = bcm2708 ] && INSTALL_SCRIPTS="$INSTALL_SCRIPTS select-plugins"

mkdir -p $INSTALL/usr/bin
for i in $INSTALL_SCRIPTS; do
  cp $PACKAGES/$1/scripts/$i $INSTALL/usr/bin
  chmod 755 $INSTALL/usr/bin/$i
done

$ROOT/$TOOLCHAIN/bin/xgettext $PACKAGES/$1/scripts/*  -L Shell  -o $PACKAGES/$1/config/openpctv.pot
if [ "$TARGET_PLATFORM" != a20 -a "$TARGET_PLATFORM" != amlogic-m6 ]; then
  for i in $PACKAGES/$1/config/openpctv-*.po; do
    $ROOT/$TOOLCHAIN/bin/msgmerge $i $PACKAGES/$1/config/openpctv.pot -U
    ls ${i}~ > /dev/null 2>&1 && rm ${i}~
    loc=$(basename $i | cut -d\- -f2 | sed 's/.po//g')
    mkdir -p $INSTALL/usr/share/locale/$loc/LC_MESSAGES
    $ROOT/$TOOLCHAIN/bin/msgfmt $i -o $INSTALL/usr/share/locale/$loc/LC_MESSAGES/openpctv.mo
  done
fi

mkdir -p $INSTALL/etc
cp $ROOT/$PACKAGES/$1/config/lang.list $INSTALL/etc

cp -rf $ROOT/$PACKAGES/$1/config/dvbcard $INSTALL/etc

mkdir -p $INSTALL/var/spool/cron/crontabs
cp $ROOT/$PACKAGES/$1/config/cron_root $INSTALL/var/spool/cron/crontabs/root

mkdir -p $INSTALL/usr/share/vdr
cp -rf $PACKAGES/$1/config/channels $INSTALL/usr/share/vdr

mkdir -p $INSTALL/usr/share/zoneinfo
cp $PACKAGES/$1/config/zonelist $INSTALL/usr/share/zoneinfo

if [ "$TARGET_ARCH" != arm ]; then
  mkdir -p $INSTALL/usr/share/installator
  cp $PACKAGES/$1/config/grub.cfg  $INSTALL/usr/share/installator
  cp $PACKAGES/$1/config/syslinux.cfg  $INSTALL/usr/share/installator

  mkdir -p $INSTALL/etc/installator

  mkdir -p $INSTALL/usr/share/configfiles
  cp $PACKAGES/$1/config/nvidia.conf $INSTALL/usr/share/configfiles/
  cp $PACKAGES/$1/config/nouveau.conf $INSTALL/usr/share/configfiles/

  mkdir -p $INSTALL/etc/modprobe.d
  cp $PACKAGES/$1/config/nvidia.conf $INSTALL/etc/modprobe.d

  mkdir -p $INSTALL/etc/modules-load.d
  echo "uvesafb" > $INSTALL/etc/modules-load.d/uvesafb.conf
fi

mkdir -p $INSTALL/lib/systemd/system/installator.target.wants/
ln -s /lib/systemd/system/getty@.service $INSTALL/lib/systemd/system/installator.target.wants/getty@tty2.service
ln -s /lib/systemd/system/getty@.service $INSTALL/lib/systemd/system/installator.target.wants/getty@tty3.service
ln -s /lib/systemd/system/getty@.service $INSTALL/lib/systemd/system/installator.target.wants/getty@tty4.service

mkdir -p $INSTALL/lib/systemd/system/setup.target.wants/
ln -s /lib/systemd/system/getty@.service $INSTALL/lib/systemd/system/setup.target.wants/getty@tty2.service
ln -s /lib/systemd/system/getty@.service $INSTALL/lib/systemd/system/setup.target.wants/getty@tty3.service
ln -s /lib/systemd/system/getty@.service $INSTALL/lib/systemd/system/setup.target.wants/getty@tty4.service

if [ "$TARGET_ARCH" = arm ] ; then
  mkdir -p $INSTALL/lib/systemd/system/multi-user.target.wants
  mkdir -p $INSTALL/etc/systemd/system
  ln -sf /lib/systemd/system/setup.service \
    $INSTALL/lib/systemd/system/multi-user.target.wants/
  ln -sf /lib/systemd/system/multi-user.target \
    $INSTALL/etc/systemd/system/default.target
else
  mkdir -p $INSTALL/etc/systemd/system
  ln -sf /lib/systemd/system/setup.target \
    $INSTALL/etc/systemd/system/default.target
fi

mkdir -p $INSTALL/lib/systemd/system/backend.target.wants/
ln -s /lib/systemd/system/get-channels.service $INSTALL/lib/systemd/system/backend.target.wants/get-channels.service
