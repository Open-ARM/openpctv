#!/bin/bash

export TERM=linux
. gettext.sh
export TEXTDOMAIN=openpctv

. /etc/lsb-release
[ -z ${DISTRIB_ID} ] && DISTRIB_ID=OpenPCTV

kernelver=$(uname -r)
if [[ "$(uname -m)" == *86 ]]; then
  machine=i586
else
  machine=i586
fi

finishinstall () {
dialog --title "$(gettext "Reboot") ${DISTRIB_ID}?" --clear --yesno "$(gettext "Driver package has been installed successfully. Now you have to reboot to verify whether the driver works.")" 8 61
retval=$?
[ $retval -eq 0 ] && reboot
}

selectnvidia () {
dialog --clear --title "$(gettext "Select NVIDIA graphics driver")" --menu \
"$(gettext "Both nouveau and nvidia enable VDPAU driver support for hardware-accelerated video decoding. By default we use the nvidia driver, using the nvidia driver may get a better experience.")" 12 80 3 \
 "nvidia" "$(gettext "NVIDIA's binary Linux graphics driver")" \
 "nouveau" "$(gettext "Open-source NVIDIA graphics driver")" 2> /tmp/driver_nvidia.tmp

if [ $(cat /tmp/driver_nvidia.tmp) = "nvidia" -a ${CURRENT_DRV} = "nouveau" ]; then
#   echo "Download and install xf86-video-nvidia-\${kernelver}_Last_\${machine}.opk, please wait..."
#   opkg install http://sourceforge.net/projects/openpctv/files/packages/xf86-video-nvidia-${kernelver}_Last_${machine}.opk/download || (echo "Can't download xf86-video-nvidia-${kernelver}_Last_${machine}.opk, check your network settings."; exit)
   if [ ! -f /etc/modprobe.d/nvidia.conf -a ! -f /usr/lib/modules-load.d/uvesafb.conf ]; then
      cat > /etc/modprobe.d/nvidia.conf << _EOF
# NVIDIA binary driver and nouveau do not play well together

# Disable nouveau
blacklist nouveau

# Disable NVIDIA binary driver
#blacklist nvidia

options uvesafb mode_option=1360x768-32 scroll=ywrap
_EOF
      echo "uvesafb" > /usr/lib/modules-load.d/uvesafb.conf
   fi
   HAS_INSTALLED=yes
elif [ $(cat /tmp/driver_nvidia.tmp) = "nouveau" -a ${CURRENT_DRV} = "nvidia" ]; then
#   opkg remove xf86-video-nvidia
   if [ -f /etc/modprobe.d/nvidia.conf -a -f /usr/lib/modules-load.d/uvesafb.conf ]; then
      rm /etc/modprobe.d/nvidia.conf /usr/lib/modules-load.d/uvesafb.conf
   fi
   HAS_INSTALLED=yes
fi
rm /tmp/driver*.tmp
}

checknvidia () {
for i in 10 9 8 7 6 5 4 3 2 1; do
   if [ -f /sys/class/drm/card0/device/vendor ]; then
      break
   else
      sleep 0.1
   fi
done

if [ $(cat /sys/class/drm/card0/device/vendor) = "0x10de" ]; then
  lsmod > /tmp/lsmod.tmp
  if grep -q -i nvidia /tmp/lsmod.tmp; then
    CURRENT_DRV=nvidia
  elif grep -q -i nouveau /tmp/lsmod.tmp; then
    CURRENT_DRV=nouveau
  fi
  selectnvidia
fi
[ X${HAS_INSTALLED} = "Xyes" ] && finishinstall
exit
}

commit () {
field1="$1"
field2="$2"
if grep -q "^options $field1" /etc/modprobe.d/options.conf; then
   sed -i "s/^options\ ${field1}.*/options\ $field1\ $field2/g" /etc/modprobe.d/options.conf
else
   echo "options $field1 $field2" >> /etc/modprobe.d/options.conf
fi
rmmod $field1
modprobe $field1 $field2
}

dvbcard () {
field=$1
dialog --title "$(eval_gettext "Found \$field")" --clear --defaultno --yesno "$(gettext "Sometimes a board without valid PCI(e) Subsystem ID can't be autodetected. You can specify the model of the card to pass card=<n> insmod option to workaround that. Redirect complaints to the vendor of the TV card. Do you want to do this?")" 9 61
}

cardlist () {
field=$1
echo "dialog --title \"$(eval_gettext "Specify the card number of \$field board")\" --clear --menu \"$(gettext "Here is a list of valid choices for the card=<n> insmod option")\" 32 70 26 \\" > /tmp/cardlist.menu
cat /etc/dvbcard/${field}.list | while read line; do
   field1="$(echo $line | cut -d: -f1)"
   field2="$(echo $line | cut -d: -f2)"
   echo "$field1 \"$field2\" \\" >> /tmp/cardlist.menu
done
echo "2> /tmp/result" >> /tmp/cardlist.menu
}

lspci > /tmp/lspci.log
for board in cx23885 cx88xx dm1105; do
  if grep -q -i $board /tmp/lspci.log; then
    if dvbcard $board; then
       cardlist $board
       . /tmp/cardlist.menu
       card=$(cat /tmp/result)
       commit $board $card
       rm /tmp/cardlist.menu /tmp/result
     fi
   fi
done
rm /tmp/lspci.log

if [ -c /dev/dvb/adapter[0..9]/dvr[0...9] -a -c /dev/dvb/adapter[0..9]/frontend[0..9] -a -c /dev/dvb/adapter[0..9]/demux[0..9] ]; then
  dialog --title "$(gettext "Additional DVB driver")" --clear --defaultno \
  --yesno "$(gettext "Your DVB devices seem to be normal. Perhaps you do not need to install other additional drivers. If you want to install additional drivers please select 'Yes'")" 8 61
  retval=$?
  [ $retval -eq 1 ] && checknvidia
else
  dialog --title "$(gettext "Additional DVB driver")" --clear \
  --yesno "$(gettext "Your DVB device does not seem to work properly. Perhaps you should install another driver. Do you want to install the additional drivers?")" 8 61
  retval=$?
  [ $retval -eq 1 ] && checknvidia
fi

dialog --clear --title "$(gettext "Install additional DVB driver")" --menu \
"$(gettext "Before proceeding please confirm your DVB device specific information. Choose the driver you need to install carefully.")" 14 80 7 \
 "Exit" "$(gettext "I do not want to install now.")" \
 "s2-liplianin" "$(gettext "Support most of the devices,such as DVBWorld,Tevii,Prof...")" \
 "tbs-drivers" "$(gettext "Support all the TBS devices")" \
 "dvbsky-drivers" "$(gettext "Support all the DVBSky devices")" \
 "tbs-dvbc-drivers" "$(gettext "Support all the TBS DVB-C devices")" \
 "dvbsky-dvbc-drivers" "$(gettext "Support all the DVBSky DVB-C devices")" \
 "tbs-qbox-drivers" "$(gettext "Support the TBS QBOX I DVB-C devices")" 2> /tmp/driver.tmp

case "$(cat /tmp/driver.tmp)" in
  s2-liplianin)	tar -czf /root/kernel_media_$(date +%Y%m%d%H%M%S)_backup.tgz /lib/modules/$kernelver/kernel/drivers/media
		rm -rf /lib/modules/$kernelver/kernel/drivers/media
		echo "Download and install s2-liplianin-\${kernelver}_Last_\${machine}.opk, please wait..."
		opkg install http://sourceforge.net/projects/openpctv/files/packages/s2-liplianin-${kernelver}_Last_${machine}.opk/download --force-overwrite || (echo "Can't download s2-liplianin-${kernelver}_Last_${machine}.opk, check your network settings."; exit)
		HAS_INSTALLED=yes
		;;
  tbs-drivers)	tar -czf /root/kernel_media_$(date +%Y%m%d%H%M%S)_backup.tgz /lib/modules/$kernelver/kernel/drivers/media
		rm -rf /lib/modules/$kernelver/kernel/drivers/media
		echo "Download and install tbs-drivers-${kernelver}_Last_${machine}.opk, please wait..."
		opkg install http://sourceforge.net/projects/openpctv/files/packages/tbs-drivers-${kernelver}_Last_${machine}.opk/download --force-overwrite || (echo "Can't download tbs-drivers-${kernelver}_Last_${machine}.opk, check your network settings."; exit)
		[ -f /usr/bin/enigma2.tbs ] && (rm /usr/bin/enigma2; ln -sf /usr/bin/enigma2.tbs /usr/bin/enigma2)
		HAS_INSTALLED=yes
		;;
  dvbsky-drivers)  tar -czf /root/kernel_media_$(date +%Y%m%d%H%M%S)_backup.tgz /lib/modules/$kernelver/kernel/drivers/media
                rm -rf /lib/modules/$kernelver/kernel/drivers/media
                echo "Download and install dvbsky-drivers-${kernelver}_Last_${machine}.opk, please wait..."
                opkg install http://sourceforge.net/projects/openpctv/files/packages/dvbsky-drivers-${kernelver}_Last_${machine}.opk/download --force-overwrite || (echo "Can't download dvbsky-drivers-${kernelver}_Last_${machine}.opk, check your network settings."; exit)
		HAS_INSTALLED=yes
                ;;
  tbs-dvbc-drivers)  tar -czf /root/kernel_media_$(date +%Y%m%d%H%M%S)_backup.tgz /lib/modules/$kernelver/kernel/drivers/media
                rm -rf /lib/modules/$kernelver/kernel/drivers/media
                echo "Download and install tbs-dvbc-drivers-${kernelver}_Last_${machine}.opk, please wait..."
                opkg install http://sourceforge.net/projects/openpctv/files/packages/tbs-dvbc-drivers-${kernelver}_Last_${machine}.opk/download --force-overwrite || (echo "Can't download tbs-dvbc-drivers-${kernelver}_Last_${machine}.opk, check your network settings."; exit)
		[ -f /usr/bin/enigma2.tbs ] && (rm /usr/bin/enigma2; ln -sf /usr/bin/enigma2.tbs /usr/bin/enigma2)
		HAS_INSTALLED=yes
                ;;
  tbs-qbox-drivers)  tar -czf /root/kernel_media_$(date +%Y%m%d%H%M%S)_backup.tgz /lib/modules/$kernelver/kernel/drivers/media
                rm -rf /lib/modules/$kernelver/kernel/drivers/media
                echo "Download and install tbs-qbox-drivers-${kernelver}_Last_${machine}.opk, please wait..."
                opkg install http://sourceforge.net/projects/openpctv/files/packages/tbs-qbox-drivers-${kernelver}_Last_${machine}.opk/download --force-overwrite || (echo "Can't download tbs-qbox-drivers-${kernelver}_Last_${machine}.opk, check your network settings."; exit)
                [ -f /usr/bin/enigma2.tbs ] && (rm /usr/bin/enigma2; ln -sf /usr/bin/enigma2.tbs /usr/bin/enigma2)
		HAS_INSTALLED=yes
                ;;
  dvbsky-dvbc-drivers)  tar -czf /root/kernel_media_$(date +%Y%m%d%H%M%S)_backup.tgz /lib/modules/$kernelver/kernel/drivers/media
                rm -rf /lib/modules/$kernelver/kernel/drivers/media
                echo "Download and install dvbsky-dvbc-drivers-${kernelver}_Last_${machine}.opk, please wait..."
                opkg install http://sourceforge.net/projects/openpctv/files/packages/dvbsky-dvbc-drivers-${kernelver}_Last_${machine}.opk/download --force-overwrite || (echo "Can't download dvbsky-dvbc-drivers-${kernelver}_Last_${machine}.opk, check your network settings."; exit)
		HAS_INSTALLED=yes
                ;;
esac

checknvidia
