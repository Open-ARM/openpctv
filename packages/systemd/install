#!/bin/sh

. config/options
get_meta $1

cd $PKG_BUILD_DIR

do_install bin
do_install lib
do_install etc/dbus-1
do_install etc/modules-load.d
do_install etc/sysctl.d
do_install etc/tmpfiles.d
do_install etc/systemd
do_install etc/udev
do_install etc/dbus-1/system.d

do_install usr/bin

# symlinks to udevadm
ln -sf /usr/bin/udevadm $INSTALL/usr/bin/udevinfo
do_install usr/share/dbus-1
do_install usr/lib/systemd

do_install usr/lib/libgudev-1.0.so*

mkdir -p $INSTALL/usr/lib/modules-load.d
mkdir -p $INSTALL/usr/lib/sysctl.d
mkdir -p $INSTALL/usr/lib/tmpfiles.d

# remove Network adaper renaming rule, this is confusing
rm -rf $INSTALL/usr/lib/udev/rules.d/80-net-setup-link.rules

# remove debug-shell.service, we install our own
rm -rf $INSTALL/usr/lib/systemd/system/debug-shell.service

# remove systemd-ask-password
rm -rf $INSTALL/bin/systemd-ask-password
rm -rf $INSTALL/bin/systemd-tty-ask-password-agent
rm -rf $INSTALL/lib/systemd/systemd-reply-password
rm -rf $INSTALL/lib/systemd/system/systemd-ask-password-console.path
rm -rf $INSTALL/lib/systemd/system/systemd-ask-password-console.service
rm -rf $INSTALL/lib/systemd/system/systemd-ask-password-wall.path
rm -rf $INSTALL/lib/systemd/system/systemd-ask-password-wall.service
rm -rf $INSTALL/lib/systemd/system/*.target.wants/systemd-ask-password-console.path
rm -rf $INSTALL/lib/systemd/system/*.target.wants/systemd-ask-password-wall.path

# remove other notused or nonsense stuff (our /etc is ro)
rm -rf $INSTALL/lib/systemd/systemd-update-done
rm -rf $INSTALL/lib/systemd/system/systemd-update-done.service
rm -rf $INSTALL/lib/systemd/system/*.target.wants/systemd-update-done.service

# remove rootfs fsck
rm -rf $INSTALL/lib/systemd/system/systemd-fsck-root.service
rm -rf $INSTALL/lib/systemd/system/*.target.wants/systemd-fsck-root.service

# remove fsck
rm -rf $INSTALL/lib/systemd/systemd-fsck
rm -rf $INSTALL/lib/systemd/system/systemd-fsck@.service

# remove remount fs
rm -rf $INSTALL/lib/systemd/systemd-remount-fs
rm -rf $INSTALL/lib/systemd/system/systemd-remount-fs.service
rm -rf $INSTALL/lib/systemd/system/*.target.wants/systemd-remount-fs.service

# remove initrd services
rm -rf $INSTALL/lib/systemd/system/initrd-*.service
rm -rf $INSTALL/lib/systemd/system/initrd-*.target

# remove nspawn
rm -rf $INSTALL/usr/bin/systemd-nspawn
rm -rf $INSTALL/lib/systemd/system/systemd-nspawn@.service

# remove genetators/catalog
rm -rf $INSTALL/lib/systemd/system-generators
rm -rf $INSTALL/lib/systemd/catalog

# meh presets
rm -rf $INSTALL/lib/systemd/system-preset

# remove networkd
rm -rf $INSTALL/lib/systemd/network

# remove systemd-journal-remote.conf
rm -rf $INSTALL/lib/tmpfiles.d/systemd-remote.conf

# tune journald.conf
sed -e "s,^.*Compress=.*$,Compress=no,g" -i $INSTALL/etc/systemd/journald.conf
sed -e "s,^.*SplitMode=.*$,SplitMode=none,g" -i $INSTALL/etc/systemd/journald.conf
sed -e "s,^.*MaxRetentionSec=.*$,MaxRetentionSec=1day,g" -i $INSTALL/etc/systemd/journald.conf
sed -e "s,^.*RuntimeMaxUse=.*$,RuntimeMaxUse=2M,g" -i $INSTALL/etc/systemd/journald.conf
sed -e "s,^.*RuntimeMaxFileSize=.*$,RuntimeMaxFileSize=128K,g" -i $INSTALL/etc/systemd/journald.conf
sed -e "s,^.*SystemMaxUse=.*$,SystemMaxUse=10M,g" -i $INSTALL/etc/systemd/journald.conf

# tune logind.conf
sed -e "s,^.*HandleLidSwitch=.*$,HandleLidSwitch=ignore,g" -i $INSTALL/etc/systemd/logind.conf

# remove systemd-firstboot.service
rm -rf $INSTALL/lib/systemd/system/systemd-firstboot.service

mkdir -p $INSTALL/etc/udev/rules.d
cp $ROOT/$PACKAGES/$1/config/* $INSTALL/etc/udev/rules.d

# replace systemd-machine-id-setup with ours
rm -rf $INSTALL/lib/systemd/systemd-machine-id-commit
rm -rf $INSTALL/lib/systemd/system/systemd-machine-id-commit.service
rm -rf $INSTALL/lib/systemd/system/*.target.wants/systemd-machine-id-commit.service
rm -rf $INSTALL/bin/systemd-machine-id-setup
cp $ROOT/$PACKAGES/$1/scripts/systemd-machine-id-setup $INSTALL/usr/bin

# Uncalled-for getty console/debug
rm -rf $INSTALL/lib/systemd/system/console-*.service
rm -rf $INSTALL/lib/systemd/system/debug-shell.service

[ "$TARGET_ARCH" = arm ] && rm $INSTALL/lib/systemd/system/autovt@.service

# provide 'halt', 'shutdown', 'reboot' & co.
mkdir -p $INSTALL/sbin
ln -sf /bin/systemctl $INSTALL/sbin/halt
ln -sf /bin/systemctl $INSTALL/sbin/poweroff
ln -sf /bin/systemctl $INSTALL/sbin/reboot
ln -sf /bin/systemctl $INSTALL/sbin/shutdown
ln -sf /bin/systemctl $INSTALL/sbin/suspend
ln -sf ../lib/systemd/systemd $INSTALL/sbin/init

# add more gettys
for TTY in 2 3; do
  ln -s /lib/systemd/system/getty/getty@service \
    $INSTALL/etc/systemd/system/getty.target.wants/getty@tty$TTY.service
done

[ -n "$MEDIA_CENTER_FRONTEND" ] && \
  DEFAULT_SYSTEMD_TARGET=$MEDIA_CENTER_FRONTEND

if [ -n "$DEFAULT_SYSTEMD_TARGET" ]; then
  mkdir -p $INSTALL/etc/systemd/system
  ln -s /lib/systemd/system/${DEFAULT_SYSTEMD_TARGET}.target \
    $INSTALL/etc/systemd/system/default.target
fi

# reduce verbosity a bit
sed -i -e "s/#LogLevel=info/LogLevel=notice/" $INSTALL/etc/systemd/system.conf

# we don't use display-manager ...
ln -s /dev/null $INSTALL/etc/systemd/system/display-manager.service

# don't try to start X when not needed
[ $USE_xorg ] || ln -s /dev/null $INSTALL/etc/systemd/system/xorg.service

# disable "Predictable Network Interface Names"
ln -s /dev/null $INSTALL/etc/udev/rules.d/80-net-name-slot.rules

# we enable RTC synchronisation for CuBox and CuBox-i only
# could also be done for RaspberryPi with ABIORTC module
#if [ "$TARGET_MACHINE" != cubox ] && [ "$TARGET_MACHINE" != cuboxi ] ; then
#  ln -s /dev/null $INSTALL/etc/systemd/system/hwclock-sync.service
#fi

exit 0
