#!/bin/sh

. config/options

unset LDFLAGS

MAKEFLAGS=-j3

cd $(kernel_path)

case $TARGET_ARCH in
  i386|x86_64)  IMAGE=bzImage  ;;
  mips|powerpc) IMAGE=vmlinux  ;;
  powerpc64)    IMAGE=zImage   ;;
  arm)
    . $CONFIG_MACHINE/meta
    if [ -n "$MACHINE_UBOOT_CONFIG" ]; then
      if [ "$TARGET_PLATFORM" = amlogic-m6 ]; then
        IMAGE=uImage-dtb
      else
        IMAGE=uImage
      fi
    else
      IMAGE=zImage
    fi
    ;;
esac

cp -R $ROOT/$PACKAGES/$1/firmware/* firmware/

[ "$TARGET_MACHINE" = wetek ] && make wetek_play.dtd
make $IMAGE
make modules

if [ -n "$MACHINE_DTS" ] ; then
  for i in $MACHINE_DTS ; do
    make $i.dtb
  done
fi

install_dir="`pwd`/.install"
debug_dir="`pwd`/.install-debuginfo/usr/lib/debug"
rm -rf $install_dir $debug_dir
mkdir -p $install_dir/lib/firmware $debug_dir

make modules_install \
  INSTALL_MOD_PATH=.install \
  DEPMOD=$ROOT/$TOOLCHAIN/bin/depmod \

kmod_dir="$install_dir/lib/modules/$(kernel_version)"

if [ -d .install/lib/firmware ]; then
  mv .install/lib/firmware .install/firmware
else
  mkdir -p .install/firmware
fi
rm -f $kmod_dir/build $kmod_dir/source $kmod_dir/modules.*
strip_kmods "$kmod_dir" "$debug_dir"

mkdir -p .install/boot
case $TARGET_ARCH in
  arm|powepc64)
    if [ "$TARGET_PLATFORM" = bcm2708 ]; then
      # add raspberry pi magic for kernel rveisions below 3.18
      #cat first32k.bin arch/$TARGET_ARCH/boot/Image > .install/boot/kernel.img

      $ROOT/$TOOLCHAIN/bin/mkknlimg --dtok arch/$TARGET_ARCH/boot/$IMAGE .install/boot/kernel.img
      mkdir -p .install/boot/overlays
      cp -f arch/arm/boot/dts/*overlay.dtb .install/boot/overlays/
      cp -f arch/arm/boot/dts/bcm2708-*.dtb .install/boot/
    elif [ "$TARGET_PLATFORM" = bcm2709 ]; then
      $ROOT/$TOOLCHAIN/bin/mkknlimg --dtok arch/$TARGET_ARCH/boot/$IMAGE .install/boot/kernel7.img
      mkdir -p .install/boot/overlays
      cp -f arch/arm/boot/dts/*overlay.dtb .install/boot/overlays/
      cp -f arch/arm/boot/dts/bcm2709-*.dtb .install/boot/
    else
      cp arch/$TARGET_ARCH/boot/$IMAGE .install/boot
    fi
    ;;
  mips|powerpc)
    cp vmlinux .install/boot
    $STRIP .install/boot/$IMAGE
    ;;
  i386|x86_64)
    cp arch/$TARGET_ARCH/boot/$IMAGE .install/boot/vmlinuz
    ;;
esac
  
exit 0
